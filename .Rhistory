library(flexdashboard)
library(dygraphs)
library(leaflet)
library(plotly)
library(readr)
set.seed(123)
datos <- read_csv("datos.csv")
dia <- seq(as.Date("2020-01-01"), as.Date("2020-12-31"), by = "day")
ozono <- datos$O3
nox <- datos$NOX
Res<- datos$Residencial
trab <- datos$Trabajo
datos <- data.frame(fecha = dia, ozono = ozono, nox = nox, residencial = Res, trabajo = trab )
dygraph(datos[, c("fecha", "ozono")], main = "Niveles de Ozono") %>%
dyRangeSelector()
dygraph(datos[, c("fecha", "nox")], main = "Niveles de NOx") %>%
dyRangeSelector()
datos %>%
knitr::kable()
dygraph(datos[, c("fecha", "residencial")], main = "Movilidad residencial") %>%
dyRangeSelector()
dygraph(datos[, c("fecha", "trabajo")], main = "Movilidad laboral") %>%
dyRangeSelector()
dato <- data.frame(ozono = ozono, nox = nox)
dato <- na.omit(dato)
dato[] <- lapply(dato, as.numeric)
# Ajustar modelo de regresión lineal
fit <- lm(nox ~ ozono, data = dato)
# Crear gráfica interactiva con plotly
ggplot(dato, aes(x = nox, y = ozono)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "red")
summary(fit)
datos2 <- data.frame(ozono = ozono, nox = nox, residencial = Res )
datos2 <- na.omit(datos2) #borra las filas con datos faltantes
datos2[] <- lapply(datos2, as.numeric)
# Ajustar modelo de regresión lineal
fit2 <- lm(ozono ~ residencial, data = datos2)
# Crear gráfica interactiva con plotly
ggplot(datos2, aes(x = residencial, y = ozono)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "red")
summary(fit2)
# Coordenadas de las estaciones
# Coordenadas de las estaciones
estaciones <- data.frame(
nombre = c("Las Aguilas", "Atemajac"),
lat = c(20.630983, 20.719626),
long = c(-103.416735, -103.355412),
ozono = c(0.02, 0.05)
)
# Crear mapa interactivo
m <- leaflet() %>%
addTiles() %>%
addMarkers(data = estaciones, ~long, ~lat,
label = ~nombre,
labelOptions = labelOptions(noHide = TRUE))
m
setwd("~/Documents/GitHub/calidadaire")
library(flexdashboard)
library(dygraphs)
library(leaflet)
library(plotly)
library(readr)
set.seed(123)
datos <- read_csv("datos.csv")
dia <- seq(as.Date("2020-01-01"), as.Date("2020-12-31"), by = "day")
ozono <- datos$O3
nox <- datos$NOX
Res<- datos$Residencial
trab <- datos$Trabajo
datos <- data.frame(fecha = dia, ozono = ozono, nox = nox, residencial = Res, trabajo = trab )
dygraph(datos[, c("fecha", "ozono")], main = "Niveles de Ozono") %>%
dyRangeSelector()
dygraph(datos[, c("fecha", "nox")], main = "Niveles de NOx") %>%
dyRangeSelector()
datos %>%
knitr::kable()
dygraph(datos[, c("fecha", "residencial")], main = "Movilidad residencial") %>%
dyRangeSelector()
dygraph(datos[, c("fecha", "trabajo")], main = "Movilidad laboral") %>%
dyRangeSelector()
dato <- data.frame(ozono = ozono, nox = nox)
dato <- na.omit(dato)
dato[] <- lapply(dato, as.numeric)
# Ajustar modelo de regresión lineal
fit <- lm(nox ~ ozono, data = dato)
# Crear gráfica interactiva con plotly
ggplot(dato, aes(x = nox, y = ozono)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "red")
summary(fit)
datos2 <- data.frame(ozono = ozono, nox = nox, residencial = Res )
datos2 <- na.omit(datos2) #borra las filas con datos faltantes
datos2[] <- lapply(datos2, as.numeric)
# Ajustar modelo de regresión lineal
fit2 <- lm(ozono ~ residencial, data = datos2)
# Crear gráfica interactiva con plotly
ggplot(datos2, aes(x = residencial, y = ozono)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "red")
summary(fit2)
# Coordenadas de las estaciones
# Coordenadas de las estaciones
estaciones <- data.frame(
nombre = c("Las Aguilas", "Atemajac"),
lat = c(20.630983, 20.719626),
long = c(-103.416735, -103.355412),
ozono = c(0.02, 0.05)
)
# Crear mapa interactivo
m <- leaflet() %>%
addTiles() %>%
addMarkers(data = estaciones, ~long, ~lat,
label = ~nombre,
labelOptions = labelOptions(noHide = TRUE))
m
unlink("calidadaire_cache", recursive = TRUE)
