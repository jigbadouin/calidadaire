datos <- data.frame(fecha = dia, ozono = ozono, nox = nox)
View(datos)
library(flexdashboard)
library(dygraphs)
library(leaflet)
library(plotly)
library(readr)
set.seed(123)
datos <- read_csv("datos.csv")
dia <- seq(as.Date("2020-01-01"), as.Date("2020-12-31"), by = "day")
ozono <- datos$O3
nox <- datos$NOX
datos <- data.frame(fecha = dia, ozono = ozono, nox = nox)
dygraph(datos[, c("fecha", "ozono")], main = "Niveles de Ozono") %>%
dyRangeSelector()
dygraph(datos[, c("fecha", "nox")], main = "Niveles de NOx") %>%
dyRangeSelector()
datos %>%
knitr::kable()
# Ajustar modelo de regresión lineal
modelo <- lm(nox ~ ozono, data = datos)
library(flexdashboard)
library(dygraphs)
library(leaflet)
library(plotly)
library(readr)
set.seed(123)
datos <- read_csv("datos.csv")
dia <- seq(as.Date("2020-01-01"), as.Date("2020-12-31"), by = "day")
ozono <- datos$O3
nox <- datos$NOX
datos <- data.frame(fecha = dia, ozono = ozono, nox = nox)
dygraph(datos[, c("fecha", "ozono")], main = "Niveles de Ozono") %>%
dyRangeSelector()
dygraph(datos[, c("fecha", "nox")], main = "Niveles de NOx") %>%
dyRangeSelector()
datos %>%
knitr::kable()
# Ajustar modelo de regresión lineal
modelo <- lm(nox ~ ozono, data = datos)
dato <- data.frame(ozono = ozono, nox = nox)
dato <- data.frame(ozono = ozono, nox = nox)
dato <- na.omit(dato)
dato <- data.frame(ozono = ozono, nox = nox)
dato <- na.omit(dato)
# Ajustar modelo de regresión lineal
modelo <- lm(nox ~ ozono, data = dato)
View(dato)
dato <- data.frame(ozono = ozono, nox = nox)
dato  <- apply(dato, 1, function(x) any(x == "#DIV/0!"))
datos_sin_div0 <- dato[!filas_div0, ]
dato <- data.frame(ozono = ozono, nox = nox)
filas_div0  <- apply(dato, 1, function(x) any(x == "#DIV/0!"))
datos_sin_div0 <- dato[!filas_div0, ]
dato <- data.frame(ozono = ozono, nox = nox)
filas_div0  <- apply(dato, 1, function(x) any(x == "#DIV/0!"))
datos_sin_div0 <- dato[!filas_div0, ]
dato <-datos_sin_div0
# Ajustar modelo de regresión lineal
modelo <- lm(nox ~ ozono, data = dato)
# Crear gráfica interactiva con plotly
p <- plotly(x = ~nox, y = ~ozono, type = 'scatter', mode = 'markers')
# Crear gráfica interactiva con plotly
p <- plotly(x = nox, y = ozono, type = 'scatter', mode = 'markers')
# Crear gráfica interactiva con plotly
p <- plot_ly(x = nox, y = ozono, type = 'scatter', mode = 'markers')
# Crear gráfica interactiva con plotly
p <- plot_ly(x = nox, y = ozono, type = 'scatter', mode = 'markers')
p
# Ajustar modelo de regresión lineal
modelo <- lm(ozono ~ nox, data = dato)
dato <- data.frame(ozono = ozono, nox = nox)
filas_div0  <- apply(dato, 1, function(x) any(x == "#DIV/0!"))
datos_sin_div0 <- dato[!filas_div0, ]
dato <-datos_sin_div0
# Ajustar modelo de regresión lineal
modelo <- lm(ozono ~ nox, data = dato)
# Crear gráfica interactiva con plotly
p <- plot_ly(x = nox, y = ozono, type = 'scatter', mode = 'markers', data = dato)
p
library(flexdashboard)
library(dygraphs)
library(leaflet)
library(plotly)
library(readr)
set.seed(123)
datos <- read_csv("datos.csv")
dia <- seq(as.Date("2020-01-01"), as.Date("2020-12-31"), by = "day")
ozono <- datos$O3
nox <- datos$NOX
datos <- data.frame(fecha = dia, ozono = ozono, nox = nox)
dygraph(datos[, c("fecha", "ozono")], main = "Niveles de Ozono") %>%
dyRangeSelector()
dygraph(datos[, c("fecha", "nox")], main = "Niveles de NOx") %>%
dyRangeSelector()
datos %>%
knitr::kable()
dato <- data.frame(ozono = ozono, nox = nox)
filas_div0  <- apply(dato, 1, function(x) any(x == "#DIV/0!"))
datos_sin_div0 <- dato[!filas_div0, ]
dato <-datos_sin_div0
# Ajustar modelo de regresión lineal
modelo <- lm(ozono ~ nox, data = dato)
# Crear gráfica interactiva con plotly
p <- plot_ly(x = nox, y = ozono, type = 'scatter', mode = 'markers', data = dato)
p
summary(modelo)
# Coordenadas de las estaciones
# Coordenadas de las estaciones
estaciones <- data.frame(
nombre = c("Las Aguilas", "Atemajac"),
lat = c(20.630983, 20.719626),
long = c(-103.416735, -103.355412)
)
# Crear mapa interactivo
m <- leaflet() %>%
addTiles() %>%
addMarkers(data = estaciones, ~long, ~lat,
label = ~nombre,
labelOptions = labelOptions(noHide = TRUE))
m
# Crear gráfica interactiva con plotly
p <- plot_ly(data = dato, x = ~nox, y = ~ozono, type = 'scatter', mode = 'markers')
p
# Ajustar modelo de regresión lineal
fit <- lm(ozono ~ nox, data = dato)
# Crear gráfica interactiva con plotly
p <- plot_ly(data = dato, x = ~nox, y = ~ozono, type = 'scatter', mode = 'markers')
p <- add_trace(p, x = ~nox, y = fitted(fit), type = 'scatter', mode = 'lines', line = list(color = 'red'))
p
# Crear gráfica interactiva con plotly
p <- plot_ly(data = dato, x = ~nox, y = ~ozono, type = 'scatter', mode = 'markers')
p <- add_trace(p, x = ~nox, y = fitted(fit), type = 'scatter', mode = 'lines', line = list(color = 'red'))
p
# Crear gráfica interactiva con plotly
p <- plot_ly(data = dato, x = ~nox, y = ~ozono, type = 'scatter', mode = 'markers')
p <- add_trace(p, x = ~nox, y = fitted(fit), type = 'scatter', mode = 'lines', line = list(color = 'red'))
p
# Crear gráfica interactiva con plotly
p <- plot_ly(data = dato, x = ~nox, y = ~ozono, type = 'scatter', mode = 'markers')
p <- add_trace(p, x = ~nox, y = fitted(fit), type = 'scatter', mode = 'lines', line = list(color = 'red'))
p
# Crear gráfica interactiva con plotly
ggplot(dato, aes(x = nox, y = ozono)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "red")
View(modelo)
# Crear gráfica interactiva con plotly
ggplot(dato, aes(x = nox, y = ozono)) +
geom_point() +
geom_line(method = "lm", se = FALSE, color = "red")
# Crear gráfica interactiva con plotly
ggplot(dato, aes(x = nox, y = ozono)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "red")
# Asumiendo que tienes un dataframe llamado "dato" con las columnas "ozono" y "nox"
plot(dato$nox, dato$ozono)
# Ajustar un modelo lineal
fit <- lm(ozono ~ nox, data = dato)
# Agregar la recta de regresión en rojo
abline(fit, col = "red")
summary(modelo)
View(dato)
datos <- read_csv("datos.csv")
dia <- seq(as.Date("2020-01-01"), as.Date("2020-12-31"), by = "day")
ozono <- as.numeric("datos$O3")
nox <- as.numeric("datos$NOX")
datos <- data.frame(fecha = dia, ozono = ozono, nox = nox)
datos <- read_csv("datos.csv")
dia <- seq(as.Date("2020-01-01"), as.Date("2020-12-31"), by = "day")
ozono <- datos$O3
nox <- datos$NOX
dato <- data.frame(ozono = ozono, nox = nox)
filas_div0  <- apply(dato, 1, function(x) any(x == "#DIV/0!"))
datos_sin_div0 <- dato[!filas_div0, ]
dato <-datos_sin_div0
ozono <- as.numeric("dato$ozono")
nox <- as.numeric("dato$nox")
nox
dato <- data.frame(ozono = ozono, nox = nox)
filas_div0  <- apply(dato, 1, function(x) any(x == "#DIV/0!"))
datos_sin_div0 <- dato[!filas_div0, ]
dato <-datos_sin_div0
dato[] <- lapply(dato, as.numeric)
View(datos)
library(flexdashboard)
library(dygraphs)
library(leaflet)
library(plotly)
library(readr)
set.seed(123)
datos <- read_csv("datos.csv")
dia <- seq(as.Date("2020-01-01"), as.Date("2020-12-31"), by = "day")
ozono <- datos$O3
nox <- datos$NOX
datos <- data.frame(fecha = dia, ozono = ozono, nox = nox)
dygraph(datos[, c("fecha", "ozono")], main = "Niveles de Ozono") %>%
dyRangeSelector()
dygraph(datos[, c("fecha", "nox")], main = "Niveles de NOx") %>%
dyRangeSelector()
datos %>%
knitr::kable()
dato <- data.frame(ozono = ozono, nox = nox)
filas_div0  <- apply(dato, 1, function(x) any(x == "#DIV/0!"))
datos_sin_div0 <- dato[!filas_div0, ]
dato <-datos_sin_div0
dato[] <- lapply(dato, as.numeric)
# Ajustar modelo de regresión lineal
fit <- lm(ozono ~ nox, data = dato)
# Crear gráfica interactiva con plotly
ggplot(dato, aes(x = nox, y = ozono)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "red")
summary(modelo)
# Coordenadas de las estaciones
# Coordenadas de las estaciones
estaciones <- data.frame(
nombre = c("Las Aguilas", "Atemajac"),
lat = c(20.630983, 20.719626),
long = c(-103.416735, -103.355412)
)
# Crear mapa interactivo
m <- leaflet() %>%
addTiles() %>%
addMarkers(data = estaciones, ~long, ~lat,
label = ~nombre,
labelOptions = labelOptions(noHide = TRUE))
m
dato <- data.frame(ozono = ozono, nox = nox)
dato <- na.omit(dato)
dato[] <- lapply(dato, as.numeric)
library(flexdashboard)
library(dygraphs)
library(leaflet)
library(plotly)
library(readr)
set.seed(123)
datos <- read_csv("datos.csv")
dia <- seq(as.Date("2020-01-01"), as.Date("2020-12-31"), by = "day")
ozono <- datos$O3
nox <- datos$NOX
datos <- data.frame(fecha = dia, ozono = ozono, nox = nox)
dygraph(datos[, c("fecha", "ozono")], main = "Niveles de Ozono") %>%
dyRangeSelector()
dygraph(datos[, c("fecha", "nox")], main = "Niveles de NOx") %>%
dyRangeSelector()
datos %>%
knitr::kable()
dato <- data.frame(ozono = ozono, nox = nox)
dato <- na.omit(dato)
dato[] <- lapply(dato, as.numeric)
# Ajustar modelo de regresión lineal
fit <- lm(ozono ~ nox, data = dato)
# Crear gráfica interactiva con plotly
ggplot(dato, aes(x = nox, y = ozono)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "red")
summary(fit)
# Coordenadas de las estaciones
# Coordenadas de las estaciones
estaciones <- data.frame(
nombre = c("Las Aguilas", "Atemajac"),
lat = c(20.630983, 20.719626),
long = c(-103.416735, -103.355412)
)
# Crear mapa interactivo
m <- leaflet() %>%
addTiles() %>%
addMarkers(data = estaciones, ~long, ~lat,
label = ~nombre,
labelOptions = labelOptions(noHide = TRUE))
m
# Coordenadas de las estaciones
# Coordenadas de las estaciones
estaciones <- data.frame(
nombre = c("Las Aguilas", "Atemajac"),
lat = c(20.630983, 20.719626),
long = c(-103.416735, -103.355412)
ozono = c(0.02, 0.05)
# Coordenadas de las estaciones
# Coordenadas de las estaciones
estaciones <- data.frame(
nombre = c("Las Aguilas", "Atemajac"),
lat = c(20.630983, 20.719626),
long = c(-103.416735, -103.355412),
ozono = c(0.02, 0.05)
)
# Crear mapa interactivo
m <- leaflet() %>%
addTiles() %>%
addMarkers(data = estaciones, ~long, ~lat,
label = ~nombre,
labelOptions = labelOptions(noHide = TRUE))
m
# Coordenadas de las estaciones
# Coordenadas de las estaciones
estaciones <- data.frame(
nombre = c("Las Aguilas", "Atemajac"),
lat = c(20.630983, 20.719626),
long = c(-103.416735, -103.355412),
ozono = c(0.02, 0.05)
)
# Crear mapa interactivo
m <- leaflet() %>%
addTiles() %>%
addMarkers(data = estaciones, ~long, ~lat,
label = ~nombre,
labelOptions = labelOptions(noHide = TRUE))
addHeatmap(data = estaciones, lng = ~long, lat = ~lat,
intensity = ~ozono)
install.packages("leaflet.extras")
# Coordenadas de las estaciones
# Coordenadas de las estaciones
estaciones <- data.frame(
nombre = c("Las Aguilas", "Atemajac"),
lat = c(20.630983, 20.719626),
long = c(-103.416735, -103.355412),
ozono = c(0.02, 0.05)
)
# Crear mapa interactivo
m <- leaflet() %>%
addTiles() %>%
addMarkers(data = estaciones, ~long, ~lat,
label = ~nombre,
labelOptions = labelOptions(noHide = TRUE))
addHeatmap(data = estaciones, lng = ~long, lat = ~lat,
intensity = ~ozono)
# Coordenadas de las estaciones
library(leaflet.extras)
estaciones <- data.frame(
nombre = c("Las Aguilas", "Atemajac"),
lat = c(20.630983, 20.719626),
long = c(-103.416735, -103.355412),
ozono = c(0.02, 0.05)
)
# Crear mapa interactivo
m <- leaflet() %>%
addTiles() %>%
addMarkers(data = estaciones, ~long, ~lat,
label = ~nombre,
labelOptions = labelOptions(noHide = TRUE))
addHeatmap(data = estaciones, lng = ~long, lat = ~lat,
intensity = ~ozono)
# Coordenadas de las estaciones
library(leaflet.extras)
estaciones <- data.frame(
nombre = c("Las Aguilas", "Atemajac"),
lat = c(20.630983, 20.719626),
long = c(-103.416735, -103.355412),
ozono = c(0.02, 0.05)
)
# Crear mapa interactivo
m <- leaflet() %>%
addTiles() %>%
addMarkers(data = estaciones, ~long, ~lat,
label = ~nombre,
labelOptions = labelOptions(noHide = TRUE))
# Agregar heatmap al mapa
m <- addHeatmap(map = m, data = estaciones,
lng = ~long, lat = ~lat,
intensity = ~ozono)
m
library(flexdashboard)
library(dygraphs)
library(leaflet)
library(plotly)
library(readr)
set.seed(123)
datos <- read_csv("datos.csv")
dia <- seq(as.Date("2020-01-01"), as.Date("2020-12-31"), by = "day")
ozono <- datos$O3
nox <- datos$NOX
datos <- data.frame(fecha = dia, ozono = ozono, nox = nox)
dygraph(datos[, c("fecha", "ozono")], main = "Niveles de Ozono") %>%
dyRangeSelector()
dygraph(datos[, c("fecha", "nox")], main = "Niveles de NOx") %>%
dyRangeSelector()
datos %>%
knitr::kable()
dato <- data.frame(ozono = ozono, nox = nox)
dato <- na.omit(dato)
dato[] <- lapply(dato, as.numeric)
# Ajustar modelo de regresión lineal
fit <- lm(nox ~ ozono, data = dato)
# Crear gráfica interactiva con plotly
ggplot(dato, aes(x = nox, y = ozono)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "red")
summary(fit)
# Coordenadas de las estaciones
# Coordenadas de las estaciones
estaciones <- data.frame(
nombre = c("Las Aguilas", "Atemajac"),
lat = c(20.630983, 20.719626),
long = c(-103.416735, -103.355412),
ozono = c(0.02, 0.05)
)
# Crear mapa interactivo
m <- leaflet() %>%
addTiles() %>%
addMarkers(data = estaciones, ~long, ~lat,
label = ~nombre,
labelOptions = labelOptions(noHide = TRUE))
m
View(data)
View(datos)
datos <- read_csv("datos.csv")
dia <- seq(as.Date("2020-01-01"), as.Date("2020-12-31"), by = "day")
ozono <- datos$O3
nox <- datos$NOX
datos <- datos$
library(flexdashboard)
library(dygraphs)
library(leaflet)
library(plotly)
library(readr)
set.seed(123)
datos <- read_csv("datos.csv")
dia <- seq(as.Date("2020-01-01"), as.Date("2020-12-31"), by = "day")
ozono <- datos$O3
nox <- datos$NOX
datos <- datos$Mov
datos <- data.frame(fecha = dia, ozono = ozono, nox = nox)
dygraph(datos[, c("fecha", "ozono")], main = "Niveles de Ozono") %>%
dyRangeSelector()
dygraph(datos[, c("fecha", "nox")], main = "Niveles de NOx") %>%
dyRangeSelector()
datos %>%
knitr::kable()
dygraph(datos[, c("fecha", "ozono")], main = "Niveles de Ozono") %>%
dyRangeSelector()
dato <- data.frame(ozono = ozono, nox = nox)
dato <- na.omit(dato)
dato[] <- lapply(dato, as.numeric)
# Ajustar modelo de regresión lineal
fit <- lm(nox ~ ozono, data = dato)
# Crear gráfica interactiva con plotly
ggplot(dato, aes(x = nox, y = ozono)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "red")
summary(fit)
# Coordenadas de las estaciones
# Coordenadas de las estaciones
estaciones <- data.frame(
nombre = c("Las Aguilas", "Atemajac"),
lat = c(20.630983, 20.719626),
long = c(-103.416735, -103.355412),
ozono = c(0.02, 0.05)
)
# Crear mapa interactivo
m <- leaflet() %>%
addTiles() %>%
addMarkers(data = estaciones, ~long, ~lat,
label = ~nombre,
labelOptions = labelOptions(noHide = TRUE))
m
View(dato)
View(datos)
datos <- data.frame(fecha = dia, ozono = ozono, nox = nox, mov = Mov )
library(flexdashboard)
library(dygraphs)
library(leaflet)
library(plotly)
library(readr)
set.seed(123)
datos <- read_csv("datos.csv")
dia <- seq(as.Date("2020-01-01"), as.Date("2020-12-31"), by = "day")
ozono <- datos$O3
nox <- datos$NOX
Mov <- datos$Mov
datos <- data.frame(fecha = dia, ozono = ozono, nox = nox, mov = Mov )
dygraph(datos[, c("fecha", "ozono")], main = "Niveles de Ozono") %>%
dyRangeSelector()
dygraph(datos[, c("fecha", "nox")], main = "Niveles de NOx") %>%
dyRangeSelector()
datos %>%
knitr::kable()
dygraph(datos[, c("fecha", "ozono")], main = "Niveles de Ozono") %>%
dyRangeSelector()
dato <- data.frame(ozono = ozono, nox = nox)
dato <- na.omit(dato)
dato[] <- lapply(dato, as.numeric)
# Ajustar modelo de regresión lineal
fit <- lm(nox ~ ozono, data = dato)
# Crear gráfica interactiva con plotly
ggplot(dato, aes(x = nox, y = ozono)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "red")
summary(fit)
# Coordenadas de las estaciones
# Coordenadas de las estaciones
estaciones <- data.frame(
nombre = c("Las Aguilas", "Atemajac"),
lat = c(20.630983, 20.719626),
long = c(-103.416735, -103.355412),
ozono = c(0.02, 0.05)
)
# Crear mapa interactivo
m <- leaflet() %>%
addTiles() %>%
addMarkers(data = estaciones, ~long, ~lat,
label = ~nombre,
labelOptions = labelOptions(noHide = TRUE))
m
dygraph(datos[, c("fecha", "mov")], main = "Movilidad residencial") %>%
dyRangeSelector()
dygraph(datos[, c("fecha", "mov","ozono")], main = "Movilidad residencial") %>%
dyRangeSelector()
dygraph(datos[, c("fecha", "mov","nox")], main = "Movilidad residencial") %>%
dyRangeSelector()
dygraph(datos[, c("fecha", "mov")], main = "Movilidad residencial") %>%
dyRangeSelector()
